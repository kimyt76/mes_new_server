<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.jct.mes_new.biz.order.mapper.DraftMapper">
    <select id="getDraftList">
        select   a.draft_date+'-'+ convert(nvarchar, seq) as draftDateSeq
                ,a.item_name
                ,a.customer_name
                ,a.draft_date
                ,b.member_nm as draftUserName
                ,a.draft_id
                ,a.seq
        from   tb_draft_mst a
               inner join tb_users b
               on b.user_id = a.draft_user_id
        where 1=1
        <if test='customerName != "" and customerName != null'>
        AND a.customer_nm LIKE '%' + #{customerName} + '%'
        </if>
        <if test='itemName != "" and itemName != null'>
            AND a.item_name LIKE '%' + #{itemName} + '%'
        </if>
        <if test='draftUserName != "" and draftUserName != null'>
            AND b.member_nm LIKE '%' + #{draftUserName} + '%'
        </if>
        order by a.draft_date desc, a.seq desc
    </select>

    <select id="getDraftInfo">
        select   a.draft_date+'-'+ convert(nvarchar, seq) as draftDateSeq
                 ,a.seq
                 ,a.item_name
                 ,a.customer_name
                 ,a.draft_date
                 ,dbo.getUserName(a.draft_user_id) as draftUserName
                 ,a.draft_user_id
                 ,a.draft_dept
                 ,a.due_date
                 ,a.order_qty
                 ,a.order_attach_file_id
                 ,a.prod_attach_file_id
                 ,a.approval_id
                 ,a.board_id
                 ,a.draft_id
                 ,a.status_type
        from   tb_draft_mst a
        where  draft_id = #{draftId}
    </select>

    <update id="saveDraftInfo">
        merge into tb_draft_mst a
            using (select #{draftId} as draft_id
                        ,#{draftDate} as draft_date
                        ,#{seq} as seq
            ) b
            on    a.draft_id = b.draft_id
            and   a.draft_date = b.draft_date
            and   a.seq = b.seq
        when matched then
            update  set  customer_name = #{customerName}
                        ,item_name = #{itemName}
                        ,order_qty = #{orderQty}
                        ,due_date = #{dueDate}
                        ,order_attach_file_id = #{orderAttachFileId}
                        ,prod_attach_file_id = #{prodAttachFileId}
                        ,upd_Id = #{userId}
                        ,upd_Dt = getdate()
        when not matched then
            insert (  draft_id ,draft_date,seq,draft_Dept, draft_user_id,customer_name,item_name,order_qty,due_date,board_id, approval_id
                    ,order_attach_file_id ,prod_attach_file_id ,reg_id ,upd_id )
            values ( #{draftId} ,#{draftDate},#{seq},#{draftDept},#{draftUserId},#{customerName},#{itemName}, #{orderQty}, #{dueDate}, #{boardId} , #{approvalId}
                    ,#{orderAttachFileId} ,#{prodAttachFileId} ,#{userId} ,#{userId} )
        ;
    </update>

    <select id="getSeq">
        select case when count(*) = 0 then 1
                    else max(seq)+1 end seq
        from   tb_order
        where  order_date = convert(char(10), getdate(), 23 )
    </select>

    <select id="getApprovalInfo">
        select    b.approval_id
                 ,a.business_user_id
                 ,a.product_user_id
                 ,a.purchase_user_id
                 ,a.qc_user_id
                 ,b.lab_user_id
                 ,dbo.getUserName(a.business_user_id) as businessUserName
                 ,dbo.getUserName(a.product_user_id) as productUserName
                 ,dbo.getUserName(a.purchase_user_id) as purchaseUserName
                 ,dbo.getUserName(a.qc_user_id) as qcUserName
                 ,dbo.getUserName(b.lab_user_id) as labUserName
                 ,b.business_approval_date
                 ,b.product_approval_date
                 ,b.purchase_approval_date
                 ,b.qc_approval_date
                 ,b.lab_approval_date
                 ,isnull(b.business_approval_date, 'N') as businessCheckYn
                 ,isnull(b.product_approval_date, 'N') as productCheckYn
                 ,isnull(b.purchase_approval_date, 'N') as purchaseCheckYn
                 ,isnull(b.qc_approval_date, 'N') as qcCheckYn
                 ,isnull(b.lab_approval_date, 'N') as labCheckYn
        from   tb_order_approval a
               left outer join tb_approval b
               on b.approval_id = #{approvalId}
    </select>

    <insert id="saveApprovalInfo">
        insert into tb_approval
        (approval_id, business_user_id, product_user_id, purchase_user_id, qc_user_id, lab_user_id)
        select #{approvalId}
             , business_user_id
             , product_user_id
             , purchase_user_id
             , qc_user_id
             ,#{labUserId}
        from  tb_order_approval
        where  use_yn ='Y'
    </insert>

    <update id="updateApprovalInfo">
        update tb_approval
        set    lab_user_id = #{labUserId}
        where  approval_id = #{approvalId}
    </update>

    <update id="saveBoardInfo">
        merge into tb_board a
            using (select #{boardId} as board_id
                         ,#{boardUserId} as board_user_id
            ) b
            on    a.board_id = b.board_id
                and   a.board_user_id = b.board_user_id
            when matched then
                update
                    set  board_txt = #{boardTxt}
                        ,upd_Id = #{userId}
                        ,upd_Dt = getdate()
            when not matched then
                insert (  board_id ,board_user_id, board_txt,reg_id ,upd_id )
                    values (
                         #{boardId} ,#{boardUserId},#{boardTxt},#{userId} ,#{userId}
                        )
        ;
    </update>

    <select id="getBoardInfo">
        select board_id
              ,board_user_id
              ,board_txt
        from  tb_board
        where board_id = #{boardId}
    </select>

    <update id="updateApproval">
        update tb_approval
        set    ${field} = isnull(#{appDate},  convert(nvarchar(10), getdate(), 23))
        where  approval_id = #{approvalId}
    </update>

    <update id="saveBoardId">
        update tb_draft_mst
        set    board_id = #{boardId}
        where  draft_id = #{draftId}
    </update>
</mapper>